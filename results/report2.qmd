---
title: "Analysis of class surveys"
subtitle: "If you want a subtitle put it here"
author: "Anna Gornyitzki, Cathy Fang, Johanna Jansen, Joy Chang, Lorretta Lu"
date: October 19, 2025
published-title: "Updated"
editor: visual
format: html
code-copy: true
execute:
  message: false
  warning: false
  echo: false
  cache: true
---

```{r}
# load any other packages and read data here

# loading packages
library(tidyverse)
library(here)
library(tidyverse)
library(MASS)
library(broom)
library(effsize)
library(lsr)
library(ordinal)
library(brant)

# set folder to where data is saved
folder <- 'data'

# read in csv
logistics <- read_csv(here(folder, 'background-clean.csv'))
```

## Executive summary

In this project, certain university courses were examined to see how closely associated they are with the students' comfort in programming of PSTAT197A. Using survey data from 60 students, the relationship between programming comfort levels (rated 1-5) and course enrollment across several departments was analyzed. Lorretta's and Cathy's portion of the analysis used ordinal logistics regression to compare comfort levels between students who had taken versus not taken each course. This approach identified the top five courses that are most strongly linked to higher programming comfort. The findings of this portion of the analysis suggest that introductory computer science and advanced data science courses have the strongest positive associations with programming comfort, highlighting their potential role in improving students' confidence and skill development.

## Data description

The dataset `background-clean.csv` contains survey responses from 60 university students aimed at understanding factors associated with programming, statistical, and mathematical comfortability and proficiency. Data were collected through a self-reported questionnaire that asked participants to rate their comfort and proficiency with programming, statistics, and mathematics on a five point scale, with 1 being least comfortable and 5 being most comfortable. Additional variables recorded include course enrollment indicators across several departments, most notably Computer Science, Statistics, Linguistics, and Economics. Each course variable is coded as a binary variable, with 1 having taken the course and 0 having not taken the course before. This data set allows for comparative and inferential analyses.

## Question of interest

The analysis aimed to identify which courses were most strongly associated with students' comfort in programming. Specifically, we addressed the following question:

> 1.  *What are the top five courses that are most associated with higher self-reported programming comfort among students?*

## Findings

Summarize your results. Don't try to explain every step you took; focus instead on providing the main data analytic outputs -- tables and figures -- and explaining clearly what they show. Clarify any important decisions you made in obtaining them. You can display codes if you like but it is not necessary.


### Code chunks

Insert code chunks using the *Insert* drop-down menu or `ctrl + alt + I` . By default in this document, codes will not be shown but results will. If you want to change this behavior, add the chunk option `echo: true` as below.

```{r}
#| echo: true
my_df <- tibble(animal = c('snake', 'gecko'),
                threatening = c(TRUE, FALSE))

my_df
```

Code chunks will be executed in order when the document is rendered, so packages should be loaded at the very beginning of the document

### Rendering tables in markdown

Several functions exist for converting dataframes to markdown tables for nice display. A simple one from the `knitr` package is `knitr::kable()` .

```{r}
my_df %>% knitr::kable()
```

### Figures

To include any figures not generated by code chunks, use *Insert \> Figure / Image* or `![CAPTION](path/file.ext)` .

Most of the time code chunks producing plots will render fine. However, to adjust sizing or alignment, use the chunk options `fig-width` and `fig-height` . Captions can be added with `fig-cap` .

```{r}
#| fig-width: 4
#| fig-height: 3
#| fig-align: left
#| fig-cap: A terrible plot.

my_df %>% 
  ggplot(aes(x = animal, y = threatening)) + 
  geom_col()
```

### Links

To include any hyperlinks, use `[display text](url)` .
